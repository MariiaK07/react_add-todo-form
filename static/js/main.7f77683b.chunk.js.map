{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","TodoList","onRemove","checkBoxChange","className","map","todo","type","toString","checked","onChange","user","onClick","preparedTodos","find","App","state","todoList","selectedUser","enteredTodo","isUserSelected","isTodoEntered","handleChange","event","target","value","setState","newTodoList","targetTodo","Number","addTodo","preventDefault","chosenUser","newTodo","length","removeTodo","filter","this","onSubmit","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f77683b.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'buy fruits',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'visit granny',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n  onRemove: (id: number) => void;\n  checkBoxChange: (event: {\n    target: {\n      id: string;\n      type: string;\n      checked: boolean;\n    };\n  }) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onRemove,\n  checkBoxChange,\n}) => (\n  <ul className=\"todos\">\n    {todos.map(todo => (\n      <li className=\"todos__todo\" key={todo.id}>\n        <div className=\"todos__todo-item\">\n          <input\n            type=\"checkbox\"\n            id={todo.id.toString()}\n            name=\"isTodoCompleted\"\n            checked={todo.completed}\n            onChange={checkBoxChange}\n            className=\"todos__todo-ckeckbox\"\n          />\n          <div className=\"todos__todo-info\">\n            <h3 className=\"todos__todo-author\">\n              {todo.user && todo.user.name}\n            </h3>\n            <p className=\"todos__todo-title\">\n              {todo.title}\n            </p>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"app__button\"\n          onClick={() => onRemove(todo.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst preparedTodos = todos.map(todo => {\n  return {\n    ...todo,\n    user: users.find(user => user.id === todo.userId) || null,\n  };\n});\n\ntype State = {\n  todoList: Todo[],\n  selectedUser: string,\n  enteredTodo: string,\n  isUserSelected: boolean,\n  isTodoEntered: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    todoList: preparedTodos,\n    selectedUser: '',\n    enteredTodo: '',\n    isUserSelected: true,\n    isTodoEntered: true,\n  };\n\n  handleChange = (event: {\n    target: {\n      name: string;\n      value: string;\n    };\n  }): void => {\n    const {\n      name,\n      value,\n    } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n    }));\n\n    if (name === 'enteredTodo') {\n      this.setState({\n        isTodoEntered: true,\n      });\n    }\n\n    if (name === 'selectedUser') {\n      this.setState({\n        isUserSelected: true,\n      });\n    }\n  };\n\n  checkBoxChange = (event: {\n    target: {\n      id: string;\n      type: string;\n      checked: boolean;\n    };\n  }): void => {\n    const {\n      id,\n      checked,\n    } = event.target;\n\n    const { todoList } = this.state;\n    const newTodoList = [...todoList];\n\n    const targetTodo = newTodoList.find(\n      (todo) => todo.id === Number(id),\n    );\n\n    if (targetTodo) {\n      targetTodo.completed = checked;\n    }\n\n    this.setState({\n      todoList: newTodoList,\n    });\n  };\n\n  addTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n    const {\n      todoList,\n      enteredTodo,\n      selectedUser,\n    } = this.state;\n\n    if (!enteredTodo || !selectedUser) {\n      return (\n        this.setState(state => ({\n          isTodoEntered: state.enteredTodo !== '',\n          isUserSelected: state.selectedUser !== '',\n        }))\n      );\n    }\n\n    const chosenUser = users.find(user => user.name === selectedUser);\n\n    const newTodo: Todo = {\n      userId: chosenUser?.id,\n      id: todoList.length + 1,\n      title: enteredTodo,\n      user: chosenUser || null,\n      completed: false,\n    };\n\n    return this.setState(state => ({\n      todoList: [...state.todoList, newTodo],\n      enteredTodo: '',\n      selectedUser: '',\n    }));\n  };\n\n  removeTodo = (id: number) => {\n    const { todoList } = this.state;\n\n    this.setState({\n      todoList: todoList.filter((todo) => {\n        return todo.id !== id;\n      }),\n    });\n  };\n\n  render() {\n    const {\n      todoList,\n      enteredTodo,\n      selectedUser,\n      isTodoEntered,\n      isUserSelected,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Todos</h1>\n        <TodoList\n          todos={todoList}\n          onRemove={this.removeTodo}\n          checkBoxChange={this.checkBoxChange}\n        />\n        <h1 className=\"app__add-todo\">Add todo</h1>\n        <form\n          className=\"app__form\"\n          onSubmit={this.addTodo}\n        >\n          <div>\n            <select\n              className=\"app__form-item\"\n              name=\"selectedUser\"\n              value={selectedUser}\n              onChange={this.handleChange}\n            >\n              <option value=\"\">\n                Choose a user\n              </option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.name}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {!isUserSelected && (\n              <span className=\"app__error-message\">\n                *Please select a user\n              </span>\n            )}\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              className=\"app__form-item\"\n              value={enteredTodo}\n              name=\"enteredTodo\"\n              id=\"todo\"\n              placeholder=\"Enter new todo\"\n              onChange={this.handleChange}\n            />\n            {!isTodoEntered && (\n              <span className=\"app__error-message\">\n                *Please enter a new todo\n              </span>\n            )}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"app__button app__button--form\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}